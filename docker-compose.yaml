services:
  crypto_postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: crypto
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 2s
      timeout: 3s
      retries: 20

  migrate:
    image: migrate/migrate:v4.15.2
    depends_on:
      crypto_postgres:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations:ro
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://postgres:postgres@crypto_postgres:5432/crypto?sslmode=disable",
        "-lock-timeout",
        "15",
        "up",
      ]
    restart: "no"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      crypto_postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    restart: unless-stopped

volumes:
  db_data:
